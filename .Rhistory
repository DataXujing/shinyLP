library(devtools)
document()
check(args = "--no-examples")
session_info()
q()
source('~/Desktop/R-directory/shinyLP/R/runExample.R')
shinyLP::runExample()
q()
source('~/Desktop/R-directory/shinyLP/R/thumbnail_label.R')
library(shinyLP)
q()
library(devtools)
devtools::document()
library(shinyLP)
rm(list=ls())
q()
library(shinyLP)
runExample()
runApp('inst/shiny-examples/LPExample')
library(devtools)
use_news_md()
devtools::use_build_ignore("NEWS.md")
library(shinyLP)
devtools::build_win()
devtools::build()
devtools::submit_cran()
devtools::check_cran()
session_info()
document()
document()
library(shinyLP)
devtools::use_testthat()
library(shinyLP)
library(shinyLP)
devtools::build_win()
q()
devtools::document()
devtools::document()
library(shinyLP)
devtools::build_win()
jumbotron("Hi Shiny!", "text to show", buttonLabel = "Click Me")
devtools::use_testthat()
context("jumbotron html output")
library(testthat)
j_html_out <- "<div class='jumbotron'>
<h1> Hi Shiny!</h1>
<p>text to show</p><p><a class='btn btn-primary btn-lg' button id='tabBut'>Click Me</a></p>
</div>"
j_html_out == j_html_out
library(shiny)
HTML("<div class='jumbotron'>
<h1> Hi Shiny!</h1>
<p>text to show</p><p><a class='btn btn-primary btn-lg' button id='tabBut'>Click Me</a></p>
</div>")
jumbotron("Hi Shiny!", "text to show", buttonLabel = "Click Me")
jumbotron("Hi Shiny!", "text to show", buttonLabel = "Click Me") == HTML("<div class='jumbotron'>
<h1> Hi Shiny!</h1>
<p>text to show</p><p><a class='btn btn-primary btn-lg' button id='tabBut'>Click Me</a></p>
</div>")
class(jumbotron("Hi Shiny!", "text to show", buttonLabel = "Click Me"))
test_string <- HTML("<div class='jumbotron'>
<h1> Hi Shiny!</h1>
<p>text to show</p><p><a class='btn btn-primary btn-lg' button id='tabBut'>Click Me</a></p>
</div>")
class(test_string)
jumbotron("Hi Shiny!", "text to show", buttonLabel = "Click Me")
library(shinyLP)
library(shinyLP)
devtools::run_examples()
devtools::run_examples()
devtools::run_examples()
devtools::document()
devtools::run_examples()
devtools::check()
devtools::build_win()
devtools::release()
devtools::release()
q()
library(shinyLP)
devtools::build_win()
devtools::release()
q()
q()
shinyLP::runExample()
?readr
library(readr)
?readr
?read_csv
install.packages()
install.packages("shinythemes")
library(shinythemes)
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
library(devtools)
devtools::document()
runApp('inst/shiny-examples/LPExample')
iframe(width = "560", height = "315", url_link = "https://www.youtube.com/embed/0fKg7e37bQE")
width = "500"
height = "100"
url_link = "https://www.youtube.com/embed/0fKg7e37bQE"
HTML(paste0("<iframe width=", width,
" height=", height,
" src=", url_link,
" frameborder='0' allowfullscreen></iframe>"))
HTML(paste0("<iframe width='", width,
"' height='", height,
"' src='", url_link,
"' frameborder='0' allowfullscreen></iframe>"))
runApp('inst/shiny-examples/LPExample')
source('~/Desktop/R-directory/shinyLP/R/iframe.R')
runApp('inst/shiny-examples/LPExample')
devtools::document()
session_info()
content = "howdy"
badge_value = 27
HTML(paste0("<ul class='list-group'>
<li class='list-group-item'>
<span class='badge'>", badge_value, "</span>",
content,
" </li> </ul>"
))
HTML(paste0("<ul class='list-group'>", list_items, "</ul>"
))
HTML(paste0("<li class='list-group-item'>", content, "</li>"))
list_items = c(HTML(paste0("<li class='list-group-item'>", content, "</li>")), HTML(paste0("<li class='list-group-item'>", content, "</li>")))
list_items
source('~/Desktop/R-directory/shinyLP/R/list_item.R')
list_item("Howdy Title", badge_value = 27)
runApp('inst/shiny-examples/LPExample')
source('~/Desktop/R-directory/shinyLP/R/list_group.R')
source('~/Desktop/R-directory/shinyLP/R/list_item.R')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
library(shinyLP)
rm(list =ls())
runApp('inst/shiny-examples/LPExample')
library(devtools)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(shinyLP)
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
?ifelse
?else
size = "large"
content = "hi well"
if(size == "default"){
HTML(paste0("<div class='well'>", content, "</div>"))
} else if(size == "large") {
HTML(paste0("<div class='well well-lg'>", content, "</div>"))
} else {
HTML(paste0("<div class='well well-sm'>", content, "</div>"))
}
runApp('inst/shiny-examples/LPExample')
devtool::document()
devtools::document()
?icon
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
library(shinyLP)
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
?fluidRow
example("fluidRow()")
example(fluidRow())
example(fluidPage())
## Only run examples in interactive R sessions
if (interactive()) {
# Example of UI with fluidPage
ui <- fluidPage(
# Application title
titlePanel("Hello Shiny!"),
sidebarLayout(
# Sidebar with a slider input
sidebarPanel(
sliderInput("obs",
"Number of observations:",
min = 0,
max = 1000,
value = 500)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Server logic
server <- function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs))
})
}
# Complete app with UI and server components
shinyApp(ui, server)
# UI demonstrating column layouts
ui <- fluidPage(
title = "Hello Shiny!",
fluidRow(
column(width = 4,
"4"
),
column(width = 3, offset = 2,
"3 offset 2"
)
)
)
shinyApp(ui, server = function(input, output) { })
}
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
library(shinyLP)
runApp('inst/shiny-examples/LPExample')
library(shinyLP)
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
library(shinyLP)
runApp('inst/shiny-examples/LPExample')
library(shinyLP)
runApp('inst/shiny-examples/LPExample')
library(shinyLP)
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
library(shinyLP)
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
devtools::use_build_ignore("example2.jpg")
?actionButton
?h1
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
runApp('inst/shiny-examples/LPExample')
?submitButton
runApp('inst/shiny-examples/LPExample')
devtools::use_build_ignore("example1.jpg")
devtools::use_build_ignore("example3.jpg")
runApp('inst/shiny-examples/LPExample')
devtools::use_build_ignore("example4.jpg")
library(shinyLP)
devtools::build_win()
devtools::build_win()
person("Jasmine", "Dumas", email = "jasmine.dumas@gmail.com", role = c("aut", "cre"))
devtools::submit_cran()
q()
panel_div <- function(class_type, panel_title, content) {
div(class = sprintf("panel panel-%s", class_type),
div(class = "panel-heading",
h3(class = "panel-title", panel_title)
),
div(class = "panel-body", content)
)
}
panel_div("primary", "panel_title", "content")
library(shiny)
panel_div("primary", "panel_title", "content")
panel_div <-function(class_type, panel_title, content) {
HTML(paste0("<div class='panel panel-", class_type,
"'> <div class='panel-heading'><h3 class='panel-title'>", panel_title,
"</h3></div><div class='panel-body'>", content,  "</div></div>", sep=""))
}
panel_div("primary", "panel_title", "content")
?sprintf
div()
tags$img()
tags$iframe
tags$li
q()
